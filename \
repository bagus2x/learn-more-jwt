const jwt = require("jsonwebtoken");
const createError = require("http-errors");

module.exports = {
  signAccessToken: (userID) => {
    return new Promise((resolve, reject) => {
      const payload = {};
      console.log(userID);
      const options = {
        expiresIn: "1h",
        issuer: "dmdkdmed.com",
        audience: userID,
      };
      const secret = process.env.ACCESS_TOKEN_SECRET;
      jwt.sign(payload, secret, options, (err, token) => {
        if (err) {
          return reject(createError.InternalServerError());
        }
        resolve(token);
      });
    });
  },
  verifyAccessToken: (req, res, next) => {
    if (!req.headers["authorization"]) return next(createError.Unauthorized());
    const authHeader = req.headers[authorization];
    const bearerToken = authHeader.split(" ");
  },
};
